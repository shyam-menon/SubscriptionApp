// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SubscriptionApp.API.Data;

namespace SubscriptionApp.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200921063733_SubscriptionName")]
    partial class SubscriptionName
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SubscriptionApp.API.Models.Categories.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("SubscriptionApp.API.Models.PseudoSkus.PseudoSku", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("TitleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TitleId");

                    b.ToTable("PseudoSkus");
                });

            modelBuilder.Entity("SubscriptionApp.API.Models.PseudoSkus.PseudoSkuColor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PseudoSkuColors");
                });

            modelBuilder.Entity("SubscriptionApp.API.Models.PseudoSkus.PseudoSkuFunction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PseudoSkuFunctions");
                });

            modelBuilder.Entity("SubscriptionApp.API.Models.PseudoSkus.PseudoSkuModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PseudoSkuModels");
                });

            modelBuilder.Entity("SubscriptionApp.API.Models.PseudoSkus.PseudoSkuSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PseudoSkuSize");
                });

            modelBuilder.Entity("SubscriptionApp.API.Models.PseudoSkus.PseudoSkuTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ColorId")
                        .HasColumnType("int");

                    b.Property<int?>("FunctionId")
                        .HasColumnType("int");

                    b.Property<int?>("ModelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SizeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ColorId");

                    b.HasIndex("FunctionId");

                    b.HasIndex("ModelId");

                    b.HasIndex("SizeId");

                    b.ToTable("PseudoSkuTitles");
                });

            modelBuilder.Entity("SubscriptionApp.API.Models.Subscriptions.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("SubscriptionApp.API.Models.Subscriptions.SubscriptionItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PseudoSkuId")
                        .HasColumnType("int");

                    b.Property<int?>("SubscriptionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PseudoSkuId");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("SubscriptionItems");
                });

            modelBuilder.Entity("SubscriptionApp.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SubscriptionApp.API.Models.Value", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Values");
                });

            modelBuilder.Entity("SubscriptionApp.API.Models.PseudoSkus.PseudoSku", b =>
                {
                    b.HasOne("SubscriptionApp.API.Models.PseudoSkus.PseudoSkuTitle", "Title")
                        .WithMany("PseudoSkus")
                        .HasForeignKey("TitleId");
                });

            modelBuilder.Entity("SubscriptionApp.API.Models.PseudoSkus.PseudoSkuTitle", b =>
                {
                    b.HasOne("SubscriptionApp.API.Models.Categories.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("SubscriptionApp.API.Models.PseudoSkus.PseudoSkuColor", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId");

                    b.HasOne("SubscriptionApp.API.Models.PseudoSkus.PseudoSkuFunction", "Function")
                        .WithMany()
                        .HasForeignKey("FunctionId");

                    b.HasOne("SubscriptionApp.API.Models.PseudoSkus.PseudoSkuModel", "Model")
                        .WithMany()
                        .HasForeignKey("ModelId");

                    b.HasOne("SubscriptionApp.API.Models.PseudoSkus.PseudoSkuSize", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId");
                });

            modelBuilder.Entity("SubscriptionApp.API.Models.Subscriptions.Subscription", b =>
                {
                    b.HasOne("SubscriptionApp.API.Models.User", null)
                        .WithMany("Subscriptions")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SubscriptionApp.API.Models.Subscriptions.SubscriptionItem", b =>
                {
                    b.HasOne("SubscriptionApp.API.Models.PseudoSkus.PseudoSku", "PseudoSku")
                        .WithMany()
                        .HasForeignKey("PseudoSkuId");

                    b.HasOne("SubscriptionApp.API.Models.Subscriptions.Subscription", null)
                        .WithMany("SubscriptionItems")
                        .HasForeignKey("SubscriptionId");
                });
#pragma warning restore 612, 618
        }
    }
}
